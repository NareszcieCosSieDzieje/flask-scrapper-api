name: Perform testing using Pytest
on: [push]

env:
  python-version: '3.10'
  venv-name: 'venv-310'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      #
      - uses: actions/checkout@v3
      # - if: ${{ steps.cache-venv.outputs.cache-hit == 'false' }} # fixme hardcode | also do diff on requirements hash and if new build
      - name: Set up venv
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install software-properties-common -y
          sudo apt install "python${{ env.python-version }}-venv"
          python${{ env.python-version }} -m pip install --upgrade pip
          python${{ env.python-version }} -m venv ./"${{ env.venv-name }}"
          source ./"${{ env.venv-name }}/bin/activate"
          python -m pip install -r requirements.txt
      # - name: Debug | Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
      - name: Debug | Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
      - name: Cache venv
        uses: actions/cache@v3
        env:
          cache-name: cache-venv
        with:
          path: /home/runner/work/flask-scrapper-api/flask-scrapper-api/${{ env.venv-name }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: /home/runner/work/flask-scrapper-api/flask-scrapper-api/${{ env.venv-name }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-
        env:
          cache-name: cache-venv
      - name: run pytest
        run: |
          source ./"${{ env.venv-name }}/bin/activate"
          python -m pytest
