name: Perform testing using Pytest and type checking using MyPy
on: [push]

env:
  python-version: '3.10'
  venv-name: 'venv-310'

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
        requirements_changed: ${{ steps.requirements-step.outputs.requirements_changed }}
    steps:
      # - name: Dump GitHub context
      # env:
      #   GITHUB_CONTEXT: ${{ toJson(github) }}
      # run: echo "$GITHUB_CONTEXT"
      # - name: Debug | Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2 # TODO: what depth to add?
      - name: Detect requirements.txt changes
        id: requirements-step
        run: |
          changed=0;
          if [[ ! $(git log ${{ github.event.before }} 2>&1 >/dev/null ) ]];
          then
            if [[ $(git diff HEAD..${{ github.event.before }} requirements.txt) ]];
            then
              changed=1;
            else
              changed=0;
            fi;
          fi;

          if [[ ${changed} -eq 1 ]];
          then
            echo "::set-output name=requirements_changed::true"
          else
            echo "::set-output name=requirements_changed::false"
          fi;
      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v3
        env:
          cache-name: cache-venv
        with:
          path: /home/runner/work/flask-scrapper-api/flask-scrapper-api/${{ env.venv-name }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # - name: Test echos
      #   run: |
      #     echo "requirements-changed = ${{ steps.requirements-step.outputs.requirements_changed }}"
      #     echo "cache-hit = ${{ steps.cache-venv.outputs.cache-hit }}"
      #     echo "or ${{ (steps.requirements-step.outputs.requirements_changed == 'true') || (steps.cache-venv.outputs.cache-hit == 'false') }}"
      - name: Set up python
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: software-properties-common "python${{ env.python-version }}-venv"
          version: 1.0
      - if: ${{ (steps.requirements-step.outputs.requirements_changed == 'true') || (steps.cache-venv.outputs.cache-hit == 'false') }}
        name: Set up venv
        run: |
          python${{ env.python-version }} -m pip install --upgrade pip
          python${{ env.python-version }} -m venv ./"${{ env.venv-name }}"
          source ./"${{ env.venv-name }}/bin/activate"
          python${{ env.python-version }} -m pip install -r requirements.txt

  test:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: setup python
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: software-properties-common "python${{ env.python-version }}-venv"
          version: 1.0
      - uses: actions/cache@v3
        with:
          path: /home/runner/work/flask-scrapper-api/flask-scrapper-api/${{ env.venv-name }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-
        env:
          cache-name: cache-venv
      - name: run pytest
        run: |
          python${{ env.python-version }} -m pip install --upgrade pip
          source ./"${{ env.venv-name }}/bin/activate"
          python -m pytest

  type-check:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: setup python
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: software-properties-common "python${{ env.python-version }}-venv"
          version: 1.0
      - uses: actions/cache@v3
        with:
          path: /home/runner/work/flask-scrapper-api/flask-scrapper-api/${{ env.venv-name }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-
        env:
          cache-name: cache-venv
      - name: run pytest
        run: |
          python${{ env.python-version }} -m pip install --upgrade pip
          source ./"${{ env.venv-name }}/bin/activate"
          python -m mypy
